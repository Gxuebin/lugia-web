// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`AmountInputDemo Component JSON 1`] = `
.c5 {
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  cursor: pointer;
  font-size: 1.2rem;
}

.c2 {
  position: relative;
  display: inline-block;
}

.c9 {
  position: relative;
  display: inline-block;
  margin: 0.8333333333333334em;
}

.c3 {
  height: 2.666666666666667em;
  cursor: text;
  width: 16.666666666666668em;
  border-radius: 0.33333333333333337em;
  border: 1px;
  border-style: solid;
  border-color: #cccccc;
  line-height: 1.5;
  font-size: 1.4rem;
  display: inline-block;
  font-family: inherit;
  -webkit-transition: all 0.3s;
  transition: all 0.3s;
  -webkit-tap-highlight-color: rgba(0,0,0,0);
  background-image: none;
  color: #333333;
  padding-left: 0.8333333333333334em;
  padding-right: 2.916666666666667em;
  outline: none;
  min-height: 100%;
  z-index: 1;
  position: relative;
  font-size: 1.2rem;
  visibility: visible;
}

.c3:hover {
  border-color: #684fff;
}

.c3::-webkit-input-placeholder {
  color: #ccc;
}

.c3::-moz-placeholder {
  color: #ccc;
}

.c3:-ms-input-placeholder {
  color: #ccc;
}

.c3::placeholder {
  color: #ccc;
}

.c3:focus {
  border-color: #684fff;
  box-shadow: 0 0 6px rgba(104,79,255,0.2);
}

.c7 {
  height: 2.666666666666667em;
  cursor: not-allowed;
  width: 16.666666666666668em;
  border-radius: 0.33333333333333337em;
  border: 1px;
  border-style: solid;
  border-color: #cccccc;
  line-height: 1.5;
  font-size: 1.4rem;
  display: inline-block;
  font-family: inherit;
  -webkit-transition: all 0.3s;
  transition: all 0.3s;
  -webkit-tap-highlight-color: rgba(0,0,0,0);
  background-image: none;
  color: #333333;
  padding-left: 0.8333333333333334em;
  padding-right: 2.916666666666667em;
  background: #f2f2f2;
  outline: none;
  min-height: 100%;
  z-index: 1;
  position: relative;
  font-size: 1.2rem;
  visibility: visible;
}

.c7:hover {
  border-color: #cccccc;
}

.c7::-webkit-input-placeholder {
  color: #ccc;
}

.c7::-moz-placeholder {
  color: #ccc;
}

.c7:-ms-input-placeholder {
  color: #ccc;
}

.c7::placeholder {
  color: #ccc;
}

.c7:focus {
  border-color: #684fff;
  box-shadow: 0 0 6px rgba(104,79,255,0.2);
}

.c10 {
  height: 2em;
  cursor: text;
  width: 29.166666666666668em;
  border-radius: 0.33333333333333337em;
  border: 1px;
  border-style: solid;
  border-color: #cccccc;
  line-height: 1.5;
  font-size: 1.4rem;
  display: inline-block;
  font-family: inherit;
  -webkit-transition: all 0.3s;
  transition: all 0.3s;
  -webkit-tap-highlight-color: rgba(0,0,0,0);
  background-image: none;
  color: #333333;
  padding-left: 0.8333333333333334em;
  padding-right: 2.916666666666667em;
  outline: none;
  min-height: 100%;
  z-index: 1;
  position: relative;
  font-size: 1.2rem;
  visibility: visible;
}

.c10:hover {
  border-color: #684fff;
}

.c10::-webkit-input-placeholder {
  color: #ccc;
}

.c10::-moz-placeholder {
  color: #ccc;
}

.c10:-ms-input-placeholder {
  color: #ccc;
}

.c10::placeholder {
  color: #ccc;
}

.c10:focus {
  border-color: #684fff;
  box-shadow: 0 0 6px rgba(104,79,255,0.2);
}

.c11 {
  height: 2.666666666666667em;
  cursor: text;
  width: 29.166666666666668em;
  border-radius: 0.33333333333333337em;
  border: 1px;
  border-style: solid;
  border-color: #cccccc;
  line-height: 1.5;
  font-size: 1.4rem;
  display: inline-block;
  font-family: inherit;
  -webkit-transition: all 0.3s;
  transition: all 0.3s;
  -webkit-tap-highlight-color: rgba(0,0,0,0);
  background-image: none;
  color: #333333;
  padding-left: 0.8333333333333334em;
  padding-right: 2.916666666666667em;
  outline: none;
  min-height: 100%;
  z-index: 1;
  position: relative;
  font-size: 1.2rem;
  visibility: visible;
}

.c11:hover {
  border-color: #684fff;
}

.c11::-webkit-input-placeholder {
  color: #ccc;
}

.c11::-moz-placeholder {
  color: #ccc;
}

.c11:-ms-input-placeholder {
  color: #ccc;
}

.c11::placeholder {
  color: #ccc;
}

.c11:focus {
  border-color: #684fff;
  box-shadow: 0 0 6px rgba(104,79,255,0.2);
}

.c12 {
  height: 3.3333333333333335em;
  cursor: text;
  width: 29.166666666666668em;
  border-radius: 0.33333333333333337em;
  border: 1px;
  border-style: solid;
  border-color: #cccccc;
  line-height: 1.5;
  font-size: 1.4rem;
  display: inline-block;
  font-family: inherit;
  -webkit-transition: all 0.3s;
  transition: all 0.3s;
  -webkit-tap-highlight-color: rgba(0,0,0,0);
  background-image: none;
  color: #333333;
  padding-left: 0.8333333333333334em;
  padding-right: 2.916666666666667em;
  outline: none;
  min-height: 100%;
  z-index: 1;
  position: relative;
  font-size: 1.2rem;
  visibility: visible;
}

.c12:hover {
  border-color: #684fff;
}

.c12::-webkit-input-placeholder {
  color: #ccc;
}

.c12::-moz-placeholder {
  color: #ccc;
}

.c12:-ms-input-placeholder {
  color: #ccc;
}

.c12::placeholder {
  color: #ccc;
}

.c12:focus {
  border-color: #684fff;
  box-shadow: 0 0 6px rgba(104,79,255,0.2);
}

.c4 {
  position: absolute;
  -webkit-transform: translateY(50%);
  -ms-transform: translateY(50%);
  transform: translateY(50%);
  z-index: 2;
  bottom: 50%;
  line-height: 0.8333333333333334em;
  right: 0.8333333333333334em;
  display: !important;
  color: #999999;
}

.c4:hover {
  color: #666666;
}

.c1 {
  width: 16.666666666666668em;
  position: relative;
  display: inline-block;
}

.c8 {
  margin: 0.8333333333333334em;
  width: 29.166666666666668em;
  position: relative;
  display: inline-block;
}

.c6 {
  background: transparent;
  left: 2.5em;
  color: #999999;
  top: 50%;
  position: absolute;
  -webkit-transform: translateY(-50%);
  -ms-transform: translateY(-50%);
  transform: translateY(-50%);
  z-index: 2;
  font-size: 1.2rem;
}

.c0 {
  float: left;
  margin-left: 50px;
}

<div>
  <div
    className="c0"
  >
    <p>
      formatter AmountInput
    </p>
    <span
      className="c1"
      onBlur={[Function]}
      onFocus={[Function]}
    >
      <span
        className="c2"
        disabled={false}
      >
        <input
          autoFocus={false}
          className="c3"
          disabled={false}
          onBlur={[Function]}
          onChange={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyPress={[Function]}
          onKeyUp={[Function]}
          readOnly={false}
          size="default"
          value="¥"
        />
        <i
          className="lugia-icon-reminder_close c4 c5"
          onClick={[Function]}
        />
      </span>
      <span
        className="c6"
        onClick={[Function]}
      >
        请填写金额
         
      </span>
    </span>
    <p>
      default AmountInput
    </p>
    <span
      className="c1"
      onBlur={[Function]}
      onFocus={[Function]}
    >
      <span
        className="c2"
        disabled={false}
      >
        <input
          autoFocus={false}
          className="c3"
          disabled={false}
          onBlur={[Function]}
          onChange={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyPress={[Function]}
          onKeyUp={[Function]}
          readOnly={false}
          size="default"
          value="¥"
        />
        <i
          className="lugia-icon-reminder_close c4 c5"
          onClick={[Function]}
        />
      </span>
      <span
        className="c6"
        onClick={[Function]}
      >
        请填写金额
         
      </span>
    </span>
    <p>
      禁用状态 
    </p>
    <span
      className="c1"
      onBlur={[Function]}
      onFocus={[Function]}
    >
      <span
        className="c2"
        disabled={true}
      >
        <input
          autoFocus={false}
          className="c7"
          disabled={true}
          onBlur={[Function]}
          onChange={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyPress={[Function]}
          onKeyUp={[Function]}
          readOnly={false}
          size="default"
          value="¥"
        />
        <i
          className="lugia-icon-reminder_close c4 c5"
          onClick={[Function]}
        />
      </span>
      <span
        className="c6"
        onClick={[Function]}
      >
         
      </span>
    </span>
  </div>
  <div
    className="c0"
  >
    <p>
      small size
    </p>
    <span
      className="c8"
      onBlur={[Function]}
      onFocus={[Function]}
    >
      <span
        className="c9"
        disabled={false}
      >
        <input
          autoFocus={false}
          className="c10"
          disabled={false}
          onBlur={[Function]}
          onChange={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyPress={[Function]}
          onKeyUp={[Function]}
          readOnly={false}
          size="small"
          value="¥"
        />
        <i
          className="lugia-icon-reminder_close c4 c5"
          onClick={[Function]}
        />
      </span>
      <span
        className="c6"
        onClick={[Function]}
      >
        请填写金额
         
      </span>
    </span>
    <p>
      default size
    </p>
    <span
      className="c8"
      onBlur={[Function]}
      onFocus={[Function]}
    >
      <span
        className="c9"
        disabled={false}
      >
        <input
          autoFocus={false}
          className="c11"
          disabled={false}
          onBlur={[Function]}
          onChange={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyPress={[Function]}
          onKeyUp={[Function]}
          readOnly={false}
          size="default"
          value="¥"
        />
        <i
          className="lugia-icon-reminder_close c4 c5"
          onClick={[Function]}
        />
      </span>
      <span
        className="c6"
        onClick={[Function]}
      >
        请填写金额
         
      </span>
    </span>
    <p>
      large size
    </p>
    <span
      className="c8"
      onBlur={[Function]}
      onFocus={[Function]}
    >
      <span
        className="c9"
        disabled={false}
      >
        <input
          autoFocus={false}
          className="c12"
          disabled={false}
          onBlur={[Function]}
          onChange={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyPress={[Function]}
          onKeyUp={[Function]}
          readOnly={false}
          size="large"
          value="¥"
        />
        <i
          className="lugia-icon-reminder_close c4 c5"
          onClick={[Function]}
        />
      </span>
      <span
        className="c6"
        onClick={[Function]}
      >
        请填写金额
         
      </span>
    </span>
  </div>
  <div
    className="c0"
  >
    <p>
      受限Input
    </p>
    <span
      className="c1"
      onBlur={[Function]}
      onFocus={[Function]}
    >
      <span
        className="c2"
        disabled={false}
      >
        <input
          autoFocus={false}
          className="c3"
          disabled={false}
          onBlur={[Function]}
          onChange={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyPress={[Function]}
          onKeyUp={[Function]}
          readOnly={false}
          size="default"
          value="¥"
        />
        <i
          className="lugia-icon-reminder_close c4 c5"
          onClick={[Function]}
        />
      </span>
      <span
        className="c6"
        onClick={[Function]}
      >
         
      </span>
    </span>
    <p>
      有默认值的 受限Input
    </p>
    <span
      className="c1"
      onBlur={[Function]}
      onFocus={[Function]}
    >
      <span
        className="c2"
        disabled={false}
      >
        <input
          autoFocus={false}
          className="c3"
          disabled={false}
          onBlur={[Function]}
          onChange={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyPress={[Function]}
          onKeyUp={[Function]}
          readOnly={false}
          size="default"
          value="¥123,456"
        />
        <i
          className="lugia-icon-reminder_close c4 c5"
          onClick={[Function]}
        />
      </span>
    </span>
  </div>
  <div
    className="c0"
  >
    <p>
      amountPrefix: '¥' transform: false 
    </p>
    <span
      className="c1"
      onBlur={[Function]}
      onFocus={[Function]}
    >
      <span
        className="c2"
        disabled={false}
      >
        <input
          autoFocus={false}
          className="c3"
          disabled={false}
          onBlur={[Function]}
          onChange={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyPress={[Function]}
          onKeyUp={[Function]}
          readOnly={false}
          size="default"
          value="¥"
        />
        <i
          className="lugia-icon-reminder_close c4 c5"
          onClick={[Function]}
        />
      </span>
      <span
        className="c6"
        onClick={[Function]}
      >
         
      </span>
    </span>
    <p>
      amountPrefix: '$' transform: false 
    </p>
    <span
      className="c1"
      onBlur={[Function]}
      onFocus={[Function]}
    >
      <span
        className="c2"
        disabled={false}
      >
        <input
          autoFocus={false}
          className="c3"
          disabled={false}
          onBlur={[Function]}
          onChange={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyPress={[Function]}
          onKeyUp={[Function]}
          readOnly={false}
          size="default"
          value="$"
        />
        <i
          className="lugia-icon-reminder_close c4 c5"
          onClick={[Function]}
        />
      </span>
      <span
        className="c6"
        onClick={[Function]}
      >
         
      </span>
    </span>
  </div>
</div>
`;

exports[`AmountInputDemo props: placeholder  1`] = `
.c4 {
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  cursor: pointer;
  font-size: 1.2rem;
}

.c1 {
  position: relative;
  display: inline-block;
}

.c2 {
  height: 2.666666666666667em;
  cursor: text;
  width: 16.666666666666668em;
  border-radius: 0.33333333333333337em;
  border: 1px;
  border-style: solid;
  border-color: #cccccc;
  line-height: 1.5;
  font-size: 1.4rem;
  display: inline-block;
  font-family: inherit;
  -webkit-transition: all 0.3s;
  transition: all 0.3s;
  -webkit-tap-highlight-color: rgba(0,0,0,0);
  background-image: none;
  color: #333333;
  padding-left: 0.8333333333333334em;
  padding-right: 2.916666666666667em;
  outline: none;
  min-height: 100%;
  z-index: 1;
  position: relative;
  font-size: 1.2rem;
  visibility: visible;
}

.c2:hover {
  border-color: #684fff;
}

.c2::-webkit-input-placeholder {
  color: #ccc;
}

.c2::-moz-placeholder {
  color: #ccc;
}

.c2:-ms-input-placeholder {
  color: #ccc;
}

.c2::placeholder {
  color: #ccc;
}

.c2:focus {
  border-color: #684fff;
  box-shadow: 0 0 6px rgba(104,79,255,0.2);
}

.c3 {
  position: absolute;
  -webkit-transform: translateY(50%);
  -ms-transform: translateY(50%);
  transform: translateY(50%);
  z-index: 2;
  bottom: 50%;
  line-height: 0.8333333333333334em;
  right: 0.8333333333333334em;
  display: !important;
  color: #999999;
}

.c3:hover {
  color: #666666;
}

.c0 {
  width: 16.666666666666668em;
  position: relative;
  display: inline-block;
}

.c5 {
  background: transparent;
  left: 2.5em;
  color: #999999;
  top: 50%;
  position: absolute;
  -webkit-transform: translateY(-50%);
  -ms-transform: translateY(-50%);
  transform: translateY(-50%);
  z-index: 2;
  font-size: 1.2rem;
}

<span
  className="c0"
  onBlur={[Function]}
  onFocus={[Function]}
>
  <span
    className="c1"
    disabled={false}
  >
    <input
      autoFocus={false}
      className="c2"
      disabled={false}
      onBlur={[Function]}
      onChange={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onKeyDown={[Function]}
      onKeyPress={[Function]}
      onKeyUp={[Function]}
      readOnly={false}
      size="default"
      value="¥"
    />
    <i
      className="lugia-icon-reminder_close c3 c4"
      onClick={[Function]}
    />
  </span>
  <span
    className="c5"
    onClick={[Function]}
  >
    请填写内容
     
  </span>
</span>
`;

exports[`AmountInputDemo props: placeholder  2`] = `
.c4 {
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  cursor: pointer;
  font-size: 1.2rem;
}

.c1 {
  position: relative;
  display: inline-block;
}

.c2 {
  height: 2.666666666666667em;
  cursor: text;
  width: 16.666666666666668em;
  border-radius: 0.33333333333333337em;
  border: 1px;
  border-style: solid;
  border-color: #cccccc;
  line-height: 1.5;
  font-size: 1.4rem;
  display: inline-block;
  font-family: inherit;
  -webkit-transition: all 0.3s;
  transition: all 0.3s;
  -webkit-tap-highlight-color: rgba(0,0,0,0);
  background-image: none;
  color: #333333;
  padding-left: 0.8333333333333334em;
  padding-right: 2.916666666666667em;
  outline: none;
  min-height: 100%;
  z-index: 1;
  position: relative;
  font-size: 1.2rem;
  visibility: visible;
}

.c2:hover {
  border-color: #684fff;
}

.c2::-webkit-input-placeholder {
  color: #ccc;
}

.c2::-moz-placeholder {
  color: #ccc;
}

.c2:-ms-input-placeholder {
  color: #ccc;
}

.c2::placeholder {
  color: #ccc;
}

.c2:focus {
  border-color: #684fff;
  box-shadow: 0 0 6px rgba(104,79,255,0.2);
}

.c3 {
  position: absolute;
  -webkit-transform: translateY(50%);
  -ms-transform: translateY(50%);
  transform: translateY(50%);
  z-index: 2;
  bottom: 50%;
  line-height: 0.8333333333333334em;
  right: 0.8333333333333334em;
  display: !important;
  color: #999999;
}

.c3:hover {
  color: #666666;
}

.c0 {
  width: 16.666666666666668em;
  position: relative;
  display: inline-block;
}

.c5 {
  background: transparent;
  left: 2.5em;
  color: #999999;
  top: 50%;
  position: absolute;
  -webkit-transform: translateY(-50%);
  -ms-transform: translateY(-50%);
  transform: translateY(-50%);
  z-index: 2;
  font-size: 1.2rem;
}

<span
  className="c0"
  onBlur={[Function]}
  onFocus={[Function]}
>
  <span
    className="c1"
    disabled={false}
  >
    <input
      autoFocus={false}
      className="c2"
      disabled={false}
      onBlur={[Function]}
      onChange={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onKeyDown={[Function]}
      onKeyPress={[Function]}
      onKeyUp={[Function]}
      readOnly={false}
      size="default"
      value="¥"
    />
    <i
      className="lugia-icon-reminder_close c3 c4"
      onClick={[Function]}
    />
  </span>
  <span
    className="c5"
    onClick={[Function]}
  >
    
     
  </span>
</span>
`;
